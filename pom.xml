<?xml version="1.0" encoding="utf-8" ?>
<!--

    This project is a kotlin port of the Google s2 geometry library (Copyright 2005 Google Inc. All Rights Reserved.):
                                    https://github.com/google/s2geometry.git

    Copyright Â© 2020 Dilivia (contact@dilivia.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0">

    <modelVersion>4.0.0</modelVersion>

    <!-- - ====================================================== -
         -                Project Information                     -
         - ====================================================== - -->

    <groupId>dilivia</groupId>
    <artifactId>s2geometry</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>S2Geometry</name>
    <description></description>

    <inceptionYear>2020</inceptionYear>
    <licenses>
        <license>
            <name>Apache 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <!-- - ====================================================== -
         -                     Properties                         -
         - ====================================================== - -->

    <properties>

        <failOnNoGitDirectory>false</failOnNoGitDirectory>

        <!-- Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Jacoco -->
        <jacoco.bundle.coveredratio.minimum>0.60</jacoco.bundle.coveredratio.minimum>

        <!-- Surefire -->
        <surefire.testFailureIgnore>false</surefire.testFailureIgnore>

        <!-- Versions -->
        <big-math.version>2.3.0</big-math.version>
        <dokka.version>0.10.1</dokka.version>
        <guava.version>29.0-jre</guava.version>
        <java.version>11</java.version>
        <junit.version>4.13</junit.version>
        <kotlin.version>1.4.10</kotlin.version>
        <kotlin-logging.version>1.8.3</kotlin-logging.version>
        <logback.version>1.2.3</logback.version>

        <!-- Plugin versions -->
        <jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>

    </properties>

    <!-- - ====================================================== -
         -               Dependency Management                    -
         - ====================================================== - -->
    <dependencyManagement>
        <dependencies>

            <!-- Kotlin -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>io.github.microutils</groupId>
                <artifactId>kotlin-logging</artifactId>
                <version>${kotlin-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- BigMath -->
            <dependency>
                <groupId>ch.obermuhlner</groupId>
                <artifactId>big-math</artifactId>
                <version>${big-math.version}</version>
            </dependency>

            <!-- Guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- Junit -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- - ====================================================== -
         -                    Dependencies                        -
         - ====================================================== - -->
    <dependencies>

        <!-- Kotlin -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>io.github.microutils</groupId>
            <artifactId>kotlin-logging</artifactId>
            <version>1.8.3</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
            <scope>test</scope>
        </dependency>

        <!-- BigMath -->
        <dependency>
            <groupId>ch.obermuhlner</groupId>
            <artifactId>big-math</artifactId>
            <version>2.3.0</version>
        </dependency>

        <!-- Guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- Junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <pluginRepositories>
        <pluginRepository>
            <id>jcenter</id>
            <name>JCenter</name>
            <url>https://jcenter.bintray.com/</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- - ====================================================== -
         -                         Build                          -
         - ====================================================== - -->
    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

        <plugins>

            <!-- License -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>4.0.rc1</version>
                <configuration>
                    <licenseSets>
                        <licenseSet>
                            <multi>
                                <preamble><![CDATA[This project is a kotlin port of the Google s2 geometry library (Copyright 2005 Google Inc. All Rights Reserved.):
                                https://github.com/google/s2geometry.git  ]]></preamble>
                                <header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
                            </multi>
                            <includes>
                                <include>pom.xml</include>
                                <include>src/main/kotlin/**/*.kt</include>
                                <include>src/test/kotlin/**/*.kt</include>
                            </includes>
                            <excludes>
                                <exclude>**/README</exclude>
                                <exclude>src/test/resources/**</exclude>
                                <exclude>src/main/resources/**</exclude>
                            </excludes>
                        </licenseSet>
                    </licenseSets>
                    <properties>
                        <owner>Dilivia</owner>
                        <email>contact@dilivia.com</email>
                    </properties>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Kotlin compiler -->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>

                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>${java.version}</jvmTarget>
                    <args>
                        <arg>-Xjvm-default=enable</arg>
                        <arg>-Xopt-in=kotlin.ExperimentalUnsignedTypes</arg>
                    </args>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <testFailureIgnore>${surefire.testFailureIgnore}</testFailureIgnore>
                    <includes>
                        <include>**/*Test.*</include>
                    </includes>
                </configuration>
            </plugin>

            <!-- Dokka -->
            <plugin>
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
                <version>${dokka.version}</version>
                <executions>
                    <execution>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>dokka</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dokkaPlugins>
                        <plugin>
                            <groupId>org.jetbrains.dokka</groupId>
                            <artifactId>kotlin-as-java-plugin</artifactId>
                            <version>${dokka.version}</version>
                        </plugin>
                    </dokkaPlugins>
                </configuration>
            </plugin>

            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <useNativeGit>true</useNativeGit>
                    <injectAllReactorProjects>true</injectAllReactorProjects>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                    <failOnNoGitDirectory>${failOnNoGitDirectory}</failOnNoGitDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- Add items to manifest -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                        <manifestEntries>
                            <Specification-Title>${project.name}</Specification-Title>
                            <Specification-Version>${project.version}</Specification-Version>
                            <Implementation-Title>${project.groupId}.${project.artifactId}</Implementation-Title>
                            <Implementation-Build-Time>${maven.build.timestamp}</Implementation-Build-Time>
                            <X-Git-SHA-1>${git.commit.id.abbrev}</X-Git-SHA-1>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

<!--            <plugin>-->
<!--                <artifactId>maven-dependency-plugin</artifactId>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>analyze</id>-->
<!--                        <goals>-->
<!--                            <goal>analyze-only</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <failOnWarning>true</failOnWarning>-->
<!--                            <outputXML>true</outputXML>-->
<!--                            <ignoredUsedUndeclaredDependencies>-->
<!--                                <ignoredUsedUndeclaredDependency>org.jetbrains:annotations::</ignoredUsedUndeclaredDependency>-->
<!--                            </ignoredUsedUndeclaredDependencies>-->
<!--                            <ignoredUnusedDeclaredDependencies>-->
<!--                                <ignoredUnusedDeclaredDependency> ch.qos.logback:logback-classic::</ignoredUnusedDeclaredDependency>-->
<!--                            </ignoredUnusedDeclaredDependencies>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->

        </plugins>

    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <!-- select non-aggregate reports -->
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>jacoco</id>
            <properties>
                <surefire.testFailureIgnore>true</surefire.testFailureIgnore>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>jacoco-initialize</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>jacoco-check</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <rule implementation="org.jacoco.maven.RuleConfiguration">
                                            <element>BUNDLE</element>
                                            <excludes>
                                                <exclude>**/*Test.*</exclude>
                                            </excludes>
                                            <limits>
                                                <limit>
                                                    <counter>INSTRUCTION</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>${jacoco.bundle.coveredratio.minimum}</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jacoco-site</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>detekt</id>
            <build>
                <plugins>

                    <plugin>
                        <groupId>com.github.ozsie</groupId>
                        <artifactId>detekt-maven-plugin</artifactId>
                        <version>1.14.1</version>
                        <configuration>
                            <report>
                                <report>html:target/reports/detekt.html</report>
                            </report>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals><goal>check</goal></goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>

</project>
